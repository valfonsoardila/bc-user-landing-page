---
import { faCaretDown, faCaretUp } from "@fortawesome/free-solid-svg-icons";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
const { question, answer } = Astro.props; // Recibe las props

let isOpen = false; // Estado para controlar si el contenido est√° abierto
function toggleOpen() {
  isOpen = !isOpen; // Cambiar el estado entre abierto y cerrado

  const content = document.querySelector(".faq-content") as HTMLElement; // Afirmar el tipo
  if (content) {
    content.style.display = isOpen ? "block" : "none"; // Muestra u oculta el contenido
  }
}
---

<div class="faq-item" id="faq-item">
  <!-- Asignar un ID para referenciarlo -->
  <div class="faq-question">
    <div class="faq-content">
      <h3>{question}</h3>
    </div>
    <div class="faq-svg">
      {
        isOpen ? (
          <FontAwesomeIcon icon={faCaretUp} />
        ) : (
          <FontAwesomeIcon icon={faCaretDown} />
        )
      }
    </div>
  </div>
  <!-- Estilos locales del componente -->
  <style>
    .faq-item {
      border-bottom: 1px solid #ccc;
      width: -webkit-fill-available;
      height: 50px;
      border-radius: 5px;
      box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.2);
      margin: 2px 0;
    }

    .faq-question {
      display: flex;
      justify-content: space-between;
      width: 100%;
      height: 100%;
      align-items: center;
      cursor: pointer;
    }

    .faq-content {
      display: flex;
      align-items: center;
      width: 95%;
      height: 100%;
      padding: 0 1em;
    }
    .faq-svg {
      display: flex;
      justify-content: center;
      align-items: center;
      width: 5%;
      height: 100%;
    }
    .faq-svg svg {
      width: 30px;
      height: 30px;
    }
  </style>
</div>
